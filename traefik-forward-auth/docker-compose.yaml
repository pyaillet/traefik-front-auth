version: "3.9"
services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    ports:
      - 8080:8080
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN_USERNAME}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    command:
      - start-dev
      - --db=postgres
      - --features=token-exchange
      - --db-url=jdbc:postgresql://postgres/keycloak
      - --db-username=keycloak
      - --db-password=keycloak
    labels:
      traefik.enable: 'true'
      traefik.http.routers.keycloak.entrypoints: http
      traefik.http.routers.keycloak.rule: PathPrefix(`/`)
      traefik.http.routers.keycloak.service: keycloak@docker
      traefik.http.services.keycloak.loadbalancer.server.port: '8080'
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=${KEYCLOAK_PG_USERNAME}
      - POSTGRES_PASSWORD=${KEYCLOAK_PG_PASSWORD}
      - POSTGRES_DB=${KEYCLOAK_PG_DATABASE}
    volumes:
      - ./data:/var/lib/postgresql/data
  proxy:
    image: traefik:v2.10
    ports:
      - 80:80
      - 8081:8080
    volumes:
      - ./traefik.toml:/etc/traefik/traefik.toml
      - /var/run/docker.sock:/var/run/docker.sock:ro
  forwardauth:
    image: mesosphere/traefik-forward-auth
    environment:
      - SECRET=${FORWARDAUTH_SECRET}
      - CLIENT_ID=${FORWARDAUTH_CLIENT_ID}
      - CLIENT_SECRET=${FORWARDAUTH_CLIENT_SECRET}
      - PROVIDER_URI=${FORWARDAUTH_PROVIDER_URI}
      - AUTH_HOST=${FORWARDAUTH_AUTH_HOST}
      - INSECURE_COOKIE=true
      - CSRF_COOKIE_NAME=_forward_auth_csrf
      - LOG_LEVEL=DEBUG
      - SCOPE=profile email openid
    labels:
      traefik.enable: 'true'
      traefik.http.services.forwardauth.loadbalancer.server.port: "4181"
      traefik.http.routers.forwardauth.rule: PathPrefix(`/_oauth`)
      traefik.http.routers.forwardauth.middlewares: traefik-forward-auth
      traefik.http.middlewares.traefik-forward-auth.forwardauth.address: http://forwardauth:4181
      traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders: X-Forwarded-User
      traefik.http.middlewares.traefik-forward-auth.forwardauth.trustForwardHeader: "true"
  whoami-opened:
    image: traefik/whoami:v1.8
    environment:
      - WHOAMI_NAME=opened
    labels:
      traefik.enable: 'true'
      traefik.http.routers.whoami-opened.entrypoints: http
      traefik.http.routers.whoami-opened.rule: PathPrefix(`/whoami-opened`)
      traefik.http.routers.whoami-opened.service: whoami-opened@docker
      traefik.http.services.whoami-opened.loadbalancer.server.port: '80'
  whoami-secured:
    image: traefik/whoami:v1.8
    environment:
      - WHOAMI_NAME=secured
    labels:
      traefik.enable: 'true'
      traefik.http.routers.whoami-secured.entrypoints: http
      traefik.http.routers.whoami-secured.middlewares: traefik-forward-auth
      traefik.http.routers.whoami-secured.rule: PathPrefix(`/whoami-secured`)
      traefik.http.routers.whoami-secured.service: whoami-secured@docker
      traefik.http.services.whoami-secured.loadbalancer.server.port: '80'
